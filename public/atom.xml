<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Brandon Liu]]></title>
  <link href="http://branliu.com/atom.xml" rel="self"/>
  <link href="http://branliu.com/"/>
  <updated>2013-05-31T21:38:59-04:00</updated>
  <id>http://branliu.com/</id>
  <author>
    <name><![CDATA[Brandon Liu]]></name>
    <email><![CDATA[brandon.k.liu@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[The Subtle Art of Becoming a Master of Facilitating Meetings]]></title>
    <link href="http://branliu.com/blog/2012/05/25/the-subtle-art-of-becoming-a-master-of-facilitating-meetings/"/>
    <updated>2012-05-25T18:09:00-04:00</updated>
    <id>http://branliu.com/blog/2012/05/25/the-subtle-art-of-becoming-a-master-of-facilitating-meetings</id>
    <content type="html"><![CDATA[<p>What makes someone a master of facilitating meetings?</p>

<p>When people teach others how to run effective meetings, they usually cover
specific meeting techniques that can be used. Here are some of the most
commons ones:</p>

<ul>
<li>Allow everyone a chance to speak, and actively encourage reticent
participants.</li>
<li>Use an agenda, schedule each agenda item (as opposed to just listing
them), and send it out before the meeting.</li>
<li>Create a list of action items to follow up on after the meeting, with assigned
persons of responsibility and deadlines.</li>
</ul>


<p>Implementing these techniques will undoubtedly make your meetings more
effective, but I feel that these recommendations miss the high-level skills
that are often more subtle to articulate. The actions above will help anyone
become competent at running meetings, but there is much more that is needed to
become a true master at meetings.</p>

<p>Briefly, I discuss two skills I believe are core to any outstanding
meeting facilitator. While my points may be less actionable than many of the
techniques you can find online, I believe they provide a valuable framework
for evaluating yourself as an effective leader during meetings. Self-awareness
is the first step to personal growth!</p>

<!-- more -->


<p>I do not take the time to expand upon each point at length here, so be sure
take the time to digest each point.</p>

<h2>Facilitation</h2>

<p>To run an outstanding meeting, you must be an outstanding facilitator of
discussion. The skills involved in being an outstanding facilitator include:</p>

<ol>
<li><strong>Controlling the level and detail of discussion.</strong> For example, don&rsquo;t discuss
logistics when discussing strategy and vision, and vice versa. Doing so will
waste time and the meeting will lose focus.</li>
<li><strong>Controlling the time given for a discussion.</strong> Allow ample time for discussion,
but cut it off and make a decision when needed. You cannot wait for unanimity,
and you certainly cannot make everyone happy. If a decision can’t be made,
determine concrete action items to be done before a decision can be made and
move on.</li>
<li><strong>Controlling the scope of the discussion.</strong> Take on one item at a time, come to
some sort of actionable conclusion, and then move on to the next item. Don’t
allow the discussion to stray off course. New discussion items can be added to
the bottom of the agenda.</li>
<li><strong>Breaking down what is said into its core message</strong> by repeating the essence when
needed. People can be verbose and roundabout when speaking, and it often
obscures their argument to the rest of the group, and even to themselves.
Paring their thoughts down to the essential and rephrasing them to directly
address what has been said will ensure that the discussion makes progress.</li>
<li><strong>Pointing out logical fallacies</strong> when you hear them. Ad hominem, straw mans, and
appeals to majority are especially common and undesirable. Understand proper
argumentation to ensure that your decisions are based on facts.</li>
<li><strong>Being open-minded</strong> by encouraging and incorporating feedback. Allow everyone to
share their thoughts, give each careful consideration, and push ahead with the
best ones. You don’t even have to have the majority on your side – just make
sure everyone feels that their voice was heard.</li>
<li><strong>Guiding the outcome of the meeting</strong>, rather than directing it. You need your
team to be invested in the decision-making process, so that they will be
committed to the ultimate outcome.</li>
</ol>


<h2>Knowing your desired outcome</h2>

<p>No one ever consistently accomplishes anything great without setting his or
her intentions and desired outcomes. This will also help you keep your meeting
on track and on time. Running a highly effective meeting requires:</p>

<ol>
<li><strong>Knowing exactly why you are having the meeting and what you want to get out of
it.</strong> You must know exactly why every single agenda item is on there. What do
you want to accomplish by the end of the meeting?</li>
<li><strong>Knowing exactly why every attendee must be there.</strong> If you value people’s time,
they will value yours.</li>
<li><strong>Never holding a meeting for the sake of holding a meeting.</strong> This will be the
death of your team&rsquo;s morale and productivity. If you have a weekly meeting
planned, but there isn’t much to discuss, just cancel the meeting!</li>
</ol>


<p>Running an effective meeting is a subtle and nuanced art requiring a high
level of social awareness and focus throughout the discussion. In my opinion,
mastery of these skills is very difficult and few people have attained it. If
you want to improve yourself, pay close attention during discussions and try
to get a high-level feel for the direction, scope, and level of the discussion
without getting bogged down in what is actually being said. Develop an
intuition for guiding and facilitating discussion by leading meetings and then
self-reflecting afterward.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How the 'Team' page differs in Biotech vs Web Startups]]></title>
    <link href="http://branliu.com/blog/2012/05/18/how-the-team-page-differs-in-biotech-vs-web-startups/"/>
    <updated>2012-05-18T18:04:00-04:00</updated>
    <id>http://branliu.com/blog/2012/05/18/how-the-team-page-differs-in-biotech-vs-web-startups</id>
    <content type="html"><![CDATA[<p>I&rsquo;ve been spending more time exploring the biotechnology startup world lately,
and it&rsquo;s quite interesting to see its many differences from the consumer web
startup world that I&rsquo;ve become familiar with. In particular, I&rsquo;ve noticed many
ways in which their executive teams differ in their structure and presentation
on websites.</p>

<p>In this post, I&rsquo;m going to list some observations that I&rsquo;ve made, and then give
some explanations that will hopefully account for these observations. I&rsquo;ve
picked a few startup team pages that I&rsquo;ll be basing my observations on.</p>

<!-- more -->


<p>Biotech:</p>

<ul>
<li><a href="http://foundationmedicine.com/about-management-team.php">http://foundationmedicine.com/about-management-team.php</a></li>
<li><a href="http://h3biomedicine.com/about_us/leadership.asp">http://h3biomedicine.com/about_us/leadership.asp</a></li>
<li><a href="http://cadencebiomedical.com/about-us/management-team/">http://cadencebiomedical.com/about-us/management-team/</a></li>
<li><a href="http://www.spiralgenetics.com/team">http://www.spiralgenetics.com/team</a></li>
</ul>


<p>Web:</p>

<ul>
<li><a href="http://asana.com/team">http://asana.com/team</a></li>
<li><a href="http://pinterest.com/about/team/">http://pinterest.com/about/team/</a></li>
<li><a href="http://learnboost.com/info/about/">http://learnboost.com/info/about/</a></li>
<li><a href="http://stripe.com/about">http://stripe.com/about</a></li>
<li><a href="http://www.qwiki.com/about-us">http://www.qwiki.com/about-us</a></li>
</ul>


<h2>Observations</h2>

<ol>
<li><p>Biotech startups have &lsquo;heftier&rsquo; titles. Web startups have much simpler
titles or no titles at all. The biotech startups have multiple C-level
executives, SVPs, VPs, and Directors. On the other hand, if you look at the web
startups, you sometimes can&rsquo;t even tell who the founders are.</p></li>
<li><p>Biotech startups show only the top-level executive and management teams. Web
startups tend to show their entire team, and they don&rsquo;t differentiate between
different roles. Technial and non-technical roles are all placed equally.</p></li>
<li><p>The images of all the biotech team members are taken in formal attire,
whereas all of the web startup team pictures are in informal clothing.</p></li>
<li><p>Biotech startups heavily emphasize the advanced degrees and educational
background of their management team. Most web startup team members don&rsquo;t have
advanced degrees, and educational background is often left out.</p></li>
</ol>


<h2>The Differences</h2>

<ol>
<li><p>The biggest difference between biotech and web startups that results in
these observations is size. In general, biotech startups need a lot more
manpower and funding than web startups to get off the ground. As a result,
these larger biotech startups require a larger management team to deal with a
multidisciplinary team of scientists, engineers, and business people.</p></li>
<li><p>The problems that most biotech startups are deeper and more complex than
what the <strong>average</strong> web startup is working on. It seems that PhDs are
generally necessary to make the scientific breakthrough that will drive the
growth of a biotech startup. In contrast, many brilliant software engineers and
entrepreneurs don&rsquo;t even have a college degree! The average person probably
won&rsquo;t understand what a biotech startup is working on, but will have a pretty
good grasp of what most web startups are working on.</p></li>
<li><p>As a result, the average age at a biotech startup is slightly older, as most
have completed advanced degree programs. This seems to lead to a slightly more
formal environment.</p></li>
<li><p>Nearly all biotech startups have tight relationships with academic
institutions and large biomedical or pharmaceutical corporations, and as a
result, seem to be influenced by a more bureaucratic kind of culture.</p></li>
</ol>


<p>As I&rsquo;ve been learning about this biotech space, it&rsquo;s been interesting to notice
its differences from the web startup world. I&rsquo;ve only been looking into the
biotech startup for a few months now, and so I don&rsquo;t really know the
intricacies of how the biotech startup space looks like. As I continue to
explore this space further, I&rsquo;m sure I&rsquo;ll continue to learn more and understand
better the influential factors that make biotech a very different space than
the Silicon Valley startup culture.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Organizing your .vimrc]]></title>
    <link href="http://branliu.com/blog/2012/05/14/organizing-your-vimrc/"/>
    <updated>2012-05-14T18:06:00-04:00</updated>
    <id>http://branliu.com/blog/2012/05/14/organizing-your-vimrc</id>
    <content type="html"><![CDATA[<p>Most .vimrc files that I’ve seen are quite long and unwieldy, often extending
to upwards of 300 lines of code. The .vimrc becomes a mess of code as it is
built up over the years, just a few lines at a time. Many people try to
resolve this issue by breaking the .vimrc down into sections, often with the
help of comments or fold markers. This makes it much easier to read, but it
isn’t a perfect solution. I still find myself having to scroll around the
.vimrc to find the line of I want to change or to find a place I can insert
a new line of vimscript.</p>

<p>There’s a much better solution for organizing the .vimrc, thanks to the
ability to source other vimscripts from within a vimscript. I’ve broken up my
own .vimrc file into 8 smaller files, and I include them into my main .vimrc
file by using the source function. Here’s what it looks like:</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='vim'><span class='line'><span class="k">set</span> <span class="nb">nocompatible</span>
</span><span class='line'>behave <span class="k">xterm</span>
</span><span class='line'><span class="k">filetype</span> plugin indent <span class="k">on</span>
</span><span class='line'><span class="nb">syntax</span> <span class="k">on</span>
</span><span class='line'>
</span><span class='line'>source $HOME<span class="sr">/.vim/</span>vimrc/filetypes.<span class="k">vim</span>
</span><span class='line'>source $HOME<span class="sr">/.vim/</span>vimrc/looks.<span class="k">vim</span>
</span><span class='line'>source $HOME<span class="sr">/.vim/</span>vimrc/mappings.<span class="k">vim</span>
</span><span class='line'>source $HOME<span class="sr">/.vim/</span>vimrc/misc.<span class="k">vim</span>
</span><span class='line'>source $HOME<span class="sr">/.vim/</span>vimrc/plugin_configs.<span class="k">vim</span>
</span><span class='line'>source $HOME<span class="sr">/.vim/</span>vimrc/plugins.<span class="k">vim</span>
</span><span class='line'>source $HOME<span class="sr">/.vim/</span>vimrc/settings.<span class="k">vim</span>
</span><span class='line'>source $HOME<span class="sr">/.vim/</span>vimrc/spelling.<span class="k">vim</span>
</span><span class='line'>
</span><span class='line'><span class="c">&quot; Source a local vimrc if it exists</span>
</span><span class='line'><span class="k">if</span> filereadable<span class="p">(</span>expand<span class="p">(</span><span class="s2">&quot;$HOME/.vimrc.local&quot;</span><span class="p">))</span>
</span><span class='line'>  source $HOME/.vimrc.local
</span><span class='line'><span class="k">endif</span>
</span></code></pre></td></tr></table></div></figure>


<p>Now each of my files are much smaller and easier to manage! It’s also quite
simple to navigate to each of these files. I’ve set up <leader>; to open up
a tab with the .vimrc, and then I can use vim’s handy gf action to open up the
file given by the filename under the cursor. I’ve included a nice way to allow
for local .vimrc additions as well.</p>

<p>If you’re interested, check out my vimfiles on github here:
<a href="https://github.com/thenovices/dotfiles">https://github.com/thenovices/dotfiles</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[List Lunacy: Problem and Solution]]></title>
    <link href="http://branliu.com/blog/2011/10/30/list-lunacy-problem-and-solution/"/>
    <updated>2011-10-30T17:53:00-04:00</updated>
    <id>http://branliu.com/blog/2011/10/30/list-lunacy-problem-and-solution</id>
    <content type="html"><![CDATA[<p>I came across this interesting problem a few weeks ago, and I had a lot of fun
thinking about it and solving it. In this post, I&rsquo;ll cover:</p>

<ol>
<li>The problem statement</li>
<li>Approaching the problem and coming to a solution</li>
<li>Experimentally verifying the solution with an implementation</li>
<li>A proof of the solution for theoretical verification</li>
<li>Interesting things I found looking around after solving the problem</li>
</ol>


<h2>The Problem Statement</h2>

<p>Write a function that returns a random node from a linked list of unknown
length in <strong>O(1) space</strong> and <strong>O(n) time</strong>. (Finding a solution in O(1) time is
not only algorithmically interesting, but is also realistic if the linked list
is too large to fit in memory). You may only traverse through the linked list
<strong>once</strong> (i.e. you can&rsquo;t traverse it once to get the length of the list, then
again to pick a node).</p>

<!-- more -->


<h2>The Approach</h2>

<p>The key thing to think about while approaching this problem is that the
algorithm has to be ready to terminate at any moment because you don&rsquo;t know
when the list is going to end. The first thing that this tells you is that the
function should always be holding onto a node that it will return if the list
comes to an end. This implies that the function should pick up the first node
that it comes to, and then with every node it traverses, it should replace the
node it is holding with some probability. The probability of replacing the node
that it&rsquo;s holding with the one it&rsquo;s traversing should be decreasing with the
number of nodes seen because as the list gets longer, the probability of
picking up a node gets smaller. The probability also depends on the number of
nodes that have been traversed, but it&rsquo;s not yet clear what the function is.
(Think about why the probability can&rsquo;t depend on something like the number of
times the function replaced the node it&rsquo;s holding or the number of nodes it has
seen since the last replacement).</p>

<p>The second thing to realize will yield the solution to the problem, although
initially it may not be obvious why it works. If we think about the fact that
the algorithm has to be ready at any moment to terminate because it might reach
the end of the list at any moment, then we realize that the algorithm always
has to pick up the <em>k</em>th node with probabiliy <em>1/k</em>. It&rsquo;s clear that if the
algorithm uses this method, then once the list ends, the algorithm would have
picked the very last node in the list with the correct probability. If the
length of the list were <em>n</em>, then the algorithm would pick up the last node in
the list with probability <em>1/n</em>. But because the algorithm has to treat every
single node as if it were going to be last node in the list, then it has to do
this for all the nodes in the list!</p>

<p>This seems unintuitive because it isn&rsquo;t clear why all the other nodes also get
returned with the same probability, but at the same time the reasoning appears
to be correct in an odd, nonconstructivist way. Let&rsquo;s write a quick
implementation of this function to get some initial verification that it is
correct, and then afterward we&rsquo;ll do a more rigorous analysis and proof so that
we can see why this solution is correct. Fortunately in this case it doesn&rsquo;t
take very long to write an implementation (at least in a high-level language
like Ruby), so we can do that before proving the correctness of the solution.
It&rsquo;ll be fun, and if we&rsquo;re wrong, the output may give some clues to the correct
solution. But in other cases, it may be more effective to prove that the
solution is correct before diving into an implementation, because then if your
code gives you the wrong answer, you can&rsquo;t be entirely sure that it&rsquo;s your
solution and not your code that is the problem.</p>

<h2>An Implementation</h2>

<p>I chose to write a quick implementation in Ruby because it&rsquo;d be fast to write
up (and also because it&rsquo;s currently my favorite language). I used an array
instead of a real linked list not only because it doesn&rsquo;t change the core of
the algorithm and it saves time, but also because it improves clarity and
avoids possible bugs in dealing with linked lists.</p>

<figure class='code'><figcaption><span>list_lunacy.rb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">get_random_node</span><span class="p">(</span><span class="n">arr</span><span class="p">)</span>
</span><span class='line'>  <span class="n">node</span> <span class="o">=</span> <span class="kp">nil</span>
</span><span class='line'>  <span class="n">arr</span><span class="o">.</span><span class="n">each_with_index</span> <span class="k">do</span> <span class="o">|</span><span class="n">el</span><span class="p">,</span> <span class="n">i</span><span class="o">|</span>
</span><span class='line'>    <span class="k">if</span> <span class="nb">rand</span><span class="p">(</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span> <span class="o">==</span> <span class="mi">0</span> <span class="c1"># returns true with probability 1/i</span>
</span><span class='line'>      <span class="n">node</span> <span class="o">=</span> <span class="n">el</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>  <span class="n">node</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">a</span> <span class="o">=</span> <span class="p">(</span><span class="mi">0</span><span class="o">.</span><span class="n">.</span><span class="o">.</span><span class="mi">10</span><span class="p">)</span><span class="o">.</span><span class="n">to_a</span>
</span><span class='line'><span class="n">count</span> <span class="o">=</span> <span class="o">[</span><span class="mi">0</span><span class="o">]</span> <span class="o">*</span> <span class="n">a</span><span class="o">.</span><span class="n">size</span>
</span><span class='line'>
</span><span class='line'><span class="mi">1_000_000</span><span class="o">.</span><span class="n">times</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">count</span><span class="o">[</span><span class="n">get_random_node</span><span class="p">(</span><span class="n">a</span><span class="p">)</span><span class="o">]</span> <span class="o">+=</span> <span class="mi">1</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="nb">p</span> <span class="n">count</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>./list_lunacy.rb
</span><span class='line'><span class="o">[</span>100061, 100070, 100450, 99472, 99986, 99762, 100038, 99957, 100092, 100112<span class="o">]</span>
</span></code></pre></td></tr></table></div></figure>


<p>This data yields a mean of 100,000 and a <a href="http://en.wikipedia.org/wiki/Standard_error">standard
error</a> of 0.2519,
which gives us a good deal of confidence about the correctness of our solution.
Hurray!</p>

<h2>A Proof (no, actually two!)</h2>

<p>So now that we have a good experimental verification that our solution is
correct, let&rsquo;s return back and think about why it is that our solution works.
In particular, it isn&rsquo;t yet clear why our method of holding onto a node at all
time and replacing it with the <em>k</em>th node with probability <em>1/k</em> results in all
the nodes being picked with equal probability. Let&rsquo;s take a look.I&rsquo;ll go
through two different proofs with two different approaches: one that
immediately proves our solution correct for lists of arbitrary length, and
another that proceeds using proof by induction.</p>

<h3>Proof 1: For lists of length <em>n</em></h3>

<p>Suppose that we have a linked of length <em>n</em>. For the <em>k</em>th node in the linked
list, where <em>k = 1, 2,&hellip;,n</em>, we pick it with probability <em>1/k</em> and we hold
onto our previously picked node with probability <em>(k-1)/k</em>. In order for the
<em>k</em>th node to be picked and held onto until the very end to be returned, the
algorithm must pick node <em>k</em>, and then cannot pick any of the successive nodes.
It doesn&rsquo;t matter what the algorithm does for nodes <em>1</em> through <em>k-1</em> because
all that matters is the last node that is picked by the algorithm.</p>

<p>And so, the probability that the <em>k</em>th node is picked and returned by the
algorithm is simply the product of the probability of the <em>k</em>th node being
picked and the probabilities that all of the successive nodes are not picked,
which turns out to be:</p>

<p><img src="http://brandonkliu.com/public/images/list_lunacy.png" alt="" /></p>

<p>Since this is true for all <em>k</em>, we see that our algorithm indeed does return a
random node with equal probability. The <em>k</em>th node initially may be picked with
probability <em>1/k</em>, but with every additional node that is traversed, the
probability that it is still held onto &ldquo;erodes&rdquo; down to <em>1/n</em>.</p>

<h3>Proof 2: A proof by induction</h3>

<p>We proceed using proof by induction on the length of the linked list.</p>

<p><strong>Basis</strong>: The linked list has length 1.</p>

<p>In the case of length 1, our algorithm immediately picks up the first node
(with probability 1), and because the linked list ends there, it returns that
node with probability 1, as desired.</p>

<p><strong>Induction Step</strong>: Assume our inductive hypothesis true for all linked lists
of length at most <em>k</em>, where <em>k</em> is greater than 1, and show that our inductive
hypothesis holds for a linked list of length <em>k+1</em>.</p>

<p>Suppose that we have a linked list of length <em>k+1</em>. By the time the algorithm
has traversed the first <em>k</em> nodes in the linked list, the node it is currently
holding onto could be any of the first <em>k</em> nodes, each with probability <em>1/k</em>,
by our inductive hypothesis. When the algorithm reaches node <em>k+1</em>, it could
pick the last node with probability <em>1/(k+1)</em>, or it may hold onto the previous
node with probability <em>k/(k+1)</em>, which means that if the algorithm held onto
the previous node, it would be holding onto any one of the first <em>k</em> nodes,
each with probability <em>(1/k) * (k/(k+1)) = 1/(k+1)</em>. Hence, when the algorithm
returns, it will return any of the <em>k+1</em> nodes, each with probability
<em>1/(k+1)</em>. This completes the induction step.</p>

<h2>Additional interesting information</h2>

<p>While writing this blog post, I was googling around, curious to see whether
anyone else had writting on this problem. I ended up discovering that this
problem is actually a special case of the Reservoir sampling problem, which can
be described as follows: Suppose that you have a incoming stream of pieces of
data. You can only see each piece of data once and you don&rsquo;t know how much
total data is coming through. You need to return <em>k</em> pieces of data from this
stream, <strong>evenly distributed</strong> from the original stream.</p>

<p>Sounds similar, right? The algorithm for the reservoir sampling problem turns
out to be quite similar to the one we&rsquo;ve come up here. If you&rsquo;re interested,
you can read a little bit more on
<a href="http://en.wikipedia.org/wiki/Reservoir_sampling">Wikipedia</a> or the <a href="http://xlinux.nist.gov/dads//HTML/reservoirSampling.html">Dictionary
of Algorithms and Data
Structures</a>, although
there&rsquo;s not too much information there. But there&rsquo;s a very interesting post on
this reservoir sampling problem and interesting extensions, such as the
weighted reservoir sampling problem and the distributed reservoir sampling
problem here: <a href="http://gregable.com/2007/10/reservoir-sampling.html.">http://gregable.com/2007/10/reservoir-sampling.html.</a> All very
interesting things to think about.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[The Education for a Successful Entrepreneur]]></title>
    <link href="http://branliu.com/blog/2011/10/23/the-education-for-a-successful-entrepreneur/"/>
    <updated>2011-10-23T17:46:00-04:00</updated>
    <id>http://branliu.com/blog/2011/10/23/the-education-for-a-successful-entrepreneur</id>
    <content type="html"><![CDATA[<p>I spend a lot of time thinking about how I can make the best use of my time,
given my circumstances and where I am in life, and one of the most important
things that I&rsquo;ve had to think about is the division of time between school and
entrepreneurship. Given that I&rsquo;m passionate about entrepreneurship and deeply
involved on campus, it would make sense for me to be spending much of my free
time working on projects, generating ideas, and practicing entrepreneurship.
After all, school is a wonderful time to work on a startup, because you don&rsquo;t
need to be making a salary, you have so many talented and ambitious peers, and
in the worst case of your startup failing, you can always fall back to your
schoolwork.</p>

<p>But this semester, I&rsquo;ve made a deliberate effort to cut down on my projects and
entrepreneurial activities in order to focus on schoolwork. I&rsquo;ve thought a lot
and there are many reasons why I&rsquo;ve made this decision to focus more on
schoolwork, and one of those reasons is that I believe entrepreneurship is
nothing more than a means to an end, and not an end in itself, as many think.</p>

<!-- more -->


<p>What is entrepreneurship? I love the practice of starting off these
definitional discussions with a Wikipedia quote.</p>

<blockquote><p>Entrepreneurship is the act of being an entrepreneur, which can be defined as<br/>&#8220;one who undertakes innovations, finance and business acumen in an effort to<br/>transform innovations into economic goods&#8221;.</p></blockquote>


<p>Although not everyone may agree with this precise definition, at least it
serves to lend some concreteness to this notion of entrepreneurship that we are
discussing. But anyway, a precise definition is not necessary for what I want
to explore here.</p>

<p>So, given this definition, what does an entrepreneur need to know in order to
be successful? Yes, as according to Wikipedia&rsquo;s definition, business and
financial acumen are indeed needed. This is where many people see
entrepreneurship start and end: the business skills of building a product,
positioning yourself to a market, and growing a company as well as the
financial skills of raising money, managing capital, and turning profits. These
are all indeed the skills required of any competent entrepreneur, but I believe
that they are not the ones that lie at the heart of entrepreneurship. Just as
Disney may be incredible at designing amusement parks, creating animations, and
composing music, all those skills are secondary to what lies at the heart of
what Disney does and why it is so successful: making people happy by delivering
a magical experience.</p>

<p>If you are without a deep understanding the core of what you want to do and how
to do it, all the peripheral skills fall to the wayside and become meaningless.
And so I believe that becoming a successful entrepreneur isn&rsquo;t just about
attending workshops on raising your seed round of funding or mastering the art
of the pitch. The heart of entrepreneurship lies in innovation, in discovering
and understanding a problem that is deeply important to people to society. It
lies in having the foresight and vision to see the world differently and in
having the domain skills and expertise to forge the road ahead to create the
future you see. Every entrepreneur is passionate about a different problem and
has deep expertise in what they&rsquo;re working on, which is why there is no
entrepreneurial class or conference or forum out there that can tell you what
sort of innovation you should be working on and how you&rsquo;ll succeed. Only you
can find that on your own.</p>

<p>But that is what an education is for. You dive deep into a domain so that
you&rsquo;re prepared to be a leader in your field and to see what it&rsquo;s like to be at
the edge of human knowledge. You study history (not necessarily the history of
civilizations, but perhaps the history of other things, like technology) and
learn about the past so that you may better see into the future, because you
discover that history repeats itself. You study a breadth of subjects to know
more about the world we live in and you learn from the innovations in every
field because oftentimes the best innovations come from somewhere outside your
domain. You challenge yourself by studying hard theoretical subjects like math
or philosophy not for their applications, but because the intellectual rigor
will train your mind to be learn quickly, process rapidly, and see a bit
further into the future by understanding the implications of all that you are
exposed to.</p>

<p>This is why an education is important, especially for those who wish to be
successful in entrepreneurship and create something truly innovative &ndash;
something that requires foresight, knowledge, and lots of hard work. The other
skills have their place and their time to be learned, but you must focus on
what is important first. Successful entrepreneurs aren&rsquo;t lucky; they know
exactly what they are doing and they&rsquo;ve prepared for it, which is why they
succeed.</p>
]]></content>
  </entry>
  
</feed>
